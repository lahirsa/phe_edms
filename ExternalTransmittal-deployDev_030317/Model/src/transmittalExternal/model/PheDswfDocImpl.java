package transmittalExternal.model;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 20 16:53:10 ICT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PheDswfDocImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(PheDswfDocImpl obj) {
                return obj.getId();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setId((String)value);
            }
        }
        ,
        TransmittalId {
            public Object get(PheDswfDocImpl obj) {
                return obj.getTransmittalId();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setTransmittalId((String)value);
            }
        }
        ,
        ContentId {
            public Object get(PheDswfDocImpl obj) {
                return obj.getContentId();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setContentId((String)value);
            }
        }
        ,
        Type {
            public Object get(PheDswfDocImpl obj) {
                return obj.getType();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setType((String)value);
            }
        }
        ,
        Format {
            public Object get(PheDswfDocImpl obj) {
                return obj.getFormat();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setFormat((String)value);
            }
        }
        ,
        Uploader {
            public Object get(PheDswfDocImpl obj) {
                return obj.getUploader();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setUploader((String)value);
            }
        }
        ,
        UploadDate {
            public Object get(PheDswfDocImpl obj) {
                return obj.getUploadDate();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setUploadDate((Date)value);
            }
        }
        ,
        DocName {
            public Object get(PheDswfDocImpl obj) {
                return obj.getDocName();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setDocName((String)value);
            }
        }
        ,
        DocTitle {
            public Object get(PheDswfDocImpl obj) {
                return obj.getDocTitle();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setDocTitle((String)value);
            }
        }
        ,
        DocNumber {
            public Object get(PheDswfDocImpl obj) {
                return obj.getDocNumber();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setDocNumber((String)value);
            }
        }
        ,
        DocStatus {
            public Object get(PheDswfDocImpl obj) {
                return obj.getDocStatus();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setDocStatus((String)value);
            }
        }
        ,
        DocSource {
            public Object get(PheDswfDocImpl obj) {
                return obj.getDocSource();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setDocSource((String)value);
            }
        }
        ,
        Pages {
            public Object get(PheDswfDocImpl obj) {
                return obj.getPages();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setPages((String)value);
            }
        }
        ,
        Remarks {
            public Object get(PheDswfDocImpl obj) {
                return obj.getRemarks();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        Revision {
            public Object get(PheDswfDocImpl obj) {
                return obj.getRevision();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setRevision((String)value);
            }
        }
        ,
        PublishStatus {
            public Object get(PheDswfDocImpl obj) {
                return obj.getPublishStatus();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setPublishStatus((String)value);
            }
        }
        ,
        DocType {
            public Object get(PheDswfDocImpl obj) {
                return obj.getDocType();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setDocType((String)value);
            }
        }
        ,
        SeqId {
            public Object get(PheDswfDocImpl obj) {
                return obj.getSeqId();
            }

            public void put(PheDswfDocImpl obj, Object value) {
                obj.setSeqId((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PheDswfDocImpl object);

        public abstract void put(PheDswfDocImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int TRANSMITTALID = AttributesEnum.TransmittalId.index();
    public static final int CONTENTID = AttributesEnum.ContentId.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int FORMAT = AttributesEnum.Format.index();
    public static final int UPLOADER = AttributesEnum.Uploader.index();
    public static final int UPLOADDATE = AttributesEnum.UploadDate.index();
    public static final int DOCNAME = AttributesEnum.DocName.index();
    public static final int DOCTITLE = AttributesEnum.DocTitle.index();
    public static final int DOCNUMBER = AttributesEnum.DocNumber.index();
    public static final int DOCSTATUS = AttributesEnum.DocStatus.index();
    public static final int DOCSOURCE = AttributesEnum.DocSource.index();
    public static final int PAGES = AttributesEnum.Pages.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int REVISION = AttributesEnum.Revision.index();
    public static final int PUBLISHSTATUS = AttributesEnum.PublishStatus.index();
    public static final int DOCTYPE = AttributesEnum.DocType.index();
    public static final int SEQID = AttributesEnum.SeqId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PheDswfDocImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public String getId() {
        return (String)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for TransmittalId, using the alias name TransmittalId.
     * @return the TransmittalId
     */
    public String getTransmittalId() {
        return (String)getAttributeInternal(TRANSMITTALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransmittalId.
     * @param value value to set the TransmittalId
     */
    public void setTransmittalId(String value) {
        setAttributeInternal(TRANSMITTALID, value);
    }

    /**
     * Gets the attribute value for ContentId, using the alias name ContentId.
     * @return the ContentId
     */
    public String getContentId() {
        return (String)getAttributeInternal(CONTENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContentId.
     * @param value value to set the ContentId
     */
    public void setContentId(String value) {
        setAttributeInternal(CONTENTID, value);
    }

    /**
     * Gets the attribute value for Type, using the alias name Type.
     * @return the Type
     */
    public String getType() {
        return (String)getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Type.
     * @param value value to set the Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for Format, using the alias name Format.
     * @return the Format
     */
    public String getFormat() {
        return (String)getAttributeInternal(FORMAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Format.
     * @param value value to set the Format
     */
    public void setFormat(String value) {
        setAttributeInternal(FORMAT, value);
    }

    /**
     * Gets the attribute value for Uploader, using the alias name Uploader.
     * @return the Uploader
     */
    public String getUploader() {
        return (String)getAttributeInternal(UPLOADER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Uploader.
     * @param value value to set the Uploader
     */
    public void setUploader(String value) {
        setAttributeInternal(UPLOADER, value);
    }

    /**
     * Gets the attribute value for UploadDate, using the alias name UploadDate.
     * @return the UploadDate
     */
    public Date getUploadDate() {
        return (Date)getAttributeInternal(UPLOADDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UploadDate.
     * @param value value to set the UploadDate
     */
    public void setUploadDate(Date value) {
        setAttributeInternal(UPLOADDATE, value);
    }

    /**
     * Gets the attribute value for DocName, using the alias name DocName.
     * @return the DocName
     */
    public String getDocName() {
        return (String)getAttributeInternal(DOCNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocName.
     * @param value value to set the DocName
     */
    public void setDocName(String value) {
        setAttributeInternal(DOCNAME, value);
    }

    /**
     * Gets the attribute value for DocTitle, using the alias name DocTitle.
     * @return the DocTitle
     */
    public String getDocTitle() {
        return (String)getAttributeInternal(DOCTITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTitle.
     * @param value value to set the DocTitle
     */
    public void setDocTitle(String value) {
        setAttributeInternal(DOCTITLE, value);
    }

    /**
     * Gets the attribute value for DocNumber, using the alias name DocNumber.
     * @return the DocNumber
     */
    public String getDocNumber() {
        return (String)getAttributeInternal(DOCNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocNumber.
     * @param value value to set the DocNumber
     */
    public void setDocNumber(String value) {
        setAttributeInternal(DOCNUMBER, value);
    }

    /**
     * Gets the attribute value for DocStatus, using the alias name DocStatus.
     * @return the DocStatus
     */
    public String getDocStatus() {
        return (String)getAttributeInternal(DOCSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocStatus.
     * @param value value to set the DocStatus
     */
    public void setDocStatus(String value) {
        setAttributeInternal(DOCSTATUS, value);
    }

    /**
     * Gets the attribute value for DocSource, using the alias name DocSource.
     * @return the DocSource
     */
    public String getDocSource() {
        return (String)getAttributeInternal(DOCSOURCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocSource.
     * @param value value to set the DocSource
     */
    public void setDocSource(String value) {
        setAttributeInternal(DOCSOURCE, value);
    }

    /**
     * Gets the attribute value for Pages, using the alias name Pages.
     * @return the Pages
     */
    public String getPages() {
        return (String)getAttributeInternal(PAGES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Pages.
     * @param value value to set the Pages
     */
    public void setPages(String value) {
        setAttributeInternal(PAGES, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Revision, using the alias name Revision.
     * @return the Revision
     */
    public String getRevision() {
        return (String)getAttributeInternal(REVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Revision.
     * @param value value to set the Revision
     */
    public void setRevision(String value) {
        setAttributeInternal(REVISION, value);
    }

    /**
     * Gets the attribute value for PublishStatus, using the alias name PublishStatus.
     * @return the PublishStatus
     */
    public String getPublishStatus() {
        return (String)getAttributeInternal(PUBLISHSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PublishStatus.
     * @param value value to set the PublishStatus
     */
    public void setPublishStatus(String value) {
        setAttributeInternal(PUBLISHSTATUS, value);
    }

    /**
     * Gets the attribute value for DocType, using the alias name DocType.
     * @return the DocType
     */
    public String getDocType() {
        return (String)getAttributeInternal(DOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocType.
     * @param value value to set the DocType
     */
    public void setDocType(String value) {
        setAttributeInternal(DOCTYPE, value);
    }

    /**
     * Gets the attribute value for SeqId, using the alias name SeqId.
     * @return the SeqId
     */
    public Number getSeqId() {
        return (Number)getAttributeInternal(SEQID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SeqId.
     * @param value value to set the SeqId
     */
    public void setSeqId(Number value) {
        setAttributeInternal(SEQID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param seqId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number seqId) {
        return new Key(new Object[]{seqId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("transmittalExternal.model.PheDswfDoc");
        }
        return mDefinitionObject;
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
    
    public Number getSeqValue(String sequenceName) {
        Number seqNumber = new Number(0);
        if (sequenceName != null && !sequenceName.equals("")) {
            SequenceImpl seqImpl =
                new SequenceImpl(sequenceName, getDBTransaction());
            seqNumber = seqImpl.getSequenceNumber();
        }
        return seqNumber;
    }

    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        setSeqId(getSeqValue("PHE_DSWF_DOC_ID_SEQ"));
    }
}
